const test = require('tape')
const convert = require('../')

test('converter', t => {
  t.plan(64)

  const result = convert(1, 'core')

  t.equal(result.ore, '1000000000000000000')
  t.equal(result.wav, '1000000000000000')
  t.equal(result.grav, '1000000000000')
  t.equal(result.nucle, '1000000000')
  t.equal(result.atom, '1000000')
  t.equal(result.moli, '1000')
  t.equal(result.core, '1')
  t.equal(result.aer, '0.001')
  t.equal(result.orb, '0.000001')
  t.equal(result.plano, '0.000000001')
  t.equal(result.tera, '0.000000000001')
  t.equal(result.sola, '0.000000000000001')
  t.equal(result.galx, '0.000000000000000001')
  t.equal(result.cluster, '0.000000000000000000001')
  t.equal(result.supermatter, '0.000000000000000000000001')

  const result2 = convert('1000000000000000000', 'ore')

  t.equal(result2.ore, '1000000000000000000')
  t.equal(result2.wav, '1000000000000000')
  t.equal(result2.grav, '1000000000000')
  t.equal(result2.nucle, '1000000000')
  t.equal(result2.atom, '1000000')
  t.equal(result2.moli, '1000')
  t.equal(result2.core, '1')
  t.equal(result2.aer, '0.001')
  t.equal(result2.orb, '0.000001')
  t.equal(result2.plano, '0.000000001')
  t.equal(result2.tera, '0.000000000001')
  t.equal(result2.sola, '0.000000000000001')
  t.equal(result2.galx, '0.000000000000000001')
  t.equal(result2.cluster, '0.000000000000000000001')
  t.equal(result2.supermatter, '0.000000000000000000000001')

  const result3 = convert('50', 'nucle')

  t.equal(result3.ore, '50000000000')
  t.equal(result3.wav, '50000000')
  t.equal(result3.grav, '50000')
  t.equal(result3.nucle, '50')
  t.equal(result3.atom, '0.05')
  t.equal(result3.moli, '0.00005')
  t.equal(result3.core, '0.00000005')
  t.equal(result3.aer, '0.00000000005')
  t.equal(result3.orb, '0.00000000000005')
  t.equal(result3.plano, '0.00000000000000005')
  t.equal(result3.tera, '0.00000000000000000005')
  t.equal(result3.sola, '0.00000000000000000000005')
  t.equal(result3.galx, '0.00000000000000000000000005')
  t.equal(result3.cluster, '0.00000000000000000000000000005')
  t.equal(result3.supermatter, '0.00000000000000000000000000000005')

  t.equal(convert(1, 'core', 'ore'), '1000000000000000000')
  t.equal(convert('50', 'nucle', 'moli'), '0.00005')

  t.throws(() => convert('50', 'invalidUnit'))
  t.throws(() => convert('1', 'core', 'invalidUnit'))

  const result4 = convert('50', -9)

  t.equal(result4.ore, '50000000000')
  t.equal(result4.wav, '50000000')
  t.equal(result4.grav, '50000')
  t.equal(result4.nucle, '50')
  t.equal(result4.atom, '0.05')
  t.equal(result4.moli, '0.00005')
  t.equal(result4.core, '0.00000005')
  t.equal(result4.aer, '0.00000000005')
  t.equal(result4.orb, '0.00000000000005')
  t.equal(result4.plano, '0.00000000000000005')
  t.equal(result4.tera, '0.00000000000000000005')
  t.equal(result4.sola, '0.00000000000000000000005')
  t.equal(result4.galx, '0.00000000000000000000000005')
  t.equal(result4.cluster, '0.00000000000000000000000000005')
  t.equal(result4.supermatter, '0.00000000000000000000000000000005')
})
